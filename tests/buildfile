import impl_libs = liba{imgui}

# Null
# exe{null}: example_null/cxx{main} $impl_libs

# Basic demo
./: exe{basics}: basic/cxx{imgui_demo} example_null/cxx{main} $impl_libs testscript

# Build only necessary sample
# Folder naming is different when selecting osx => apple used
# Keep exe{} naming consistant for the time being

# Render naming is different with directx which is fully expanded
rndfoldername = $rnb
switch $rnb
{
  case 'dx9'
    rndfoldername = 'directx9'
  case 'dx10'
    rndfoldername = 'directx10'
  case 'dx11'
    rndfoldername = 'directx11'
  case 'dx12'
    rndfoldername = 'directx12'
}

exe{"$pfb-$rndfoldername"}: obje{example_apple_"$rndfoldername"/main.a.o} : include = ($pfb == 'osx')
obje{example_apple_"$rndfoldername"/main.a.o}: file{example_apple_"$rndfoldername"/main.mm} $impl_libs
{{
   lib_poptions = $cxx.lib_poptions($<[1], obje) 
   depdb hash $lib_poptions
   diag objective-c ($<[0])
   poptions = $cxx.options $cc.poptions
   poptions += $lib_poptions
   $cxx.path $poptions $cxx.coptions $cc.coptions\
   -c $path($<[0]) -o $path($>)
}}

exe{"$pfb-$rndfoldername"}: obje{example_"$pfb"_metal/main.a.o} : include = ($pfb != 'osx' && $rnb == 'metal')
obje{example_"$pfb"_metal/main.a.o}: file{example_"$pfb"_metal/main.mm} $impl_libs
{{
   lib_poptions = $cxx.lib_poptions($<[1], obje) 
   depdb hash $lib_poptions
   diag objective-c ($<[0])
   poptions = $cxx.options $cc.poptions
   poptions += $lib_poptions
   $cxx.path $poptions $cxx.coptions $cc.coptions\
   -c $path($<[0]) -o $path($>)
}}

./: exe{"$pfb-$rndfoldername"}: basic/cxx{imgui_demo}
exe{"$pfb-$rndfoldername"}: example_"$pfb"_"$rndfoldername"/cxx{main} : include = ($pfb != 'osx' && $rnb != 'metal')
exe{"$pfb-$rndfoldername"}: $impl_libs

if($rnb == 'metal')
  cxx.libs += -framework CoreVideo -framework QuartzCore

exe{*}: test = true
